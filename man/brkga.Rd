% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/brkga.R
\name{brkga}
\alias{brkga}
\title{BRKGA Algorithm}
\usage{
brkga(Data, Fo, Dc, rc = 0.7, pe = 0.2, pm = 0.2, n, p = 100,
  ng = 2000, ngw = 500, MaxTime = 3600, MAX = FALSE, Exa1 = NULL,
  Exa2 = NULL)
}
\arguments{
\item{Data}{Vector or Matrix (data to calculate objective function)}

\item{Fo}{Objective function defined by user}

\item{Dc}{Decoder defined by user}

\item{rc}{Crossover probability}

\item{pe}{Percentual of elite  chromosomes}

\item{pm}{Percentual of mutant chromosomes}

\item{n}{Number of genes in the chromosomes associated with a solution}

\item{p}{Number of elements (chromosomes) in the population}

\item{ng}{Number of generations of the brkga algorithm}

\item{ngw}{Number of generations without improvement}

\item{MaxTime}{Maximum CPU Time (seconds)}

\item{MAX}{Argument that determines maximization (TRUE) or minimization problem (FALSE)}

\item{Exa1}{Extra Argument to Decoder}

\item{Exa2}{Extra Argument to Objective Function}
}
\value{
\item{fbest}{Best value of Objective Function}

\item{gbest}{Best Solution}

\item{cpu_time}{Cpu time in seconds}
}
\description{
This function applies BRKGA algorithm to a problem considering
Objective Function and Decoder defined by user
}
\details{
brkga
}
\examples{
#Example1 - TSP - Travelling Salesman Problem
data(Data_capitals)
D<-as.matrix(dist(Data_capitals))
Ncities<-nrow(Data_capitals)
s<-brkga(Data=D,Fo=Fobj_TSP,Dc=Decoder_TSP,ng=100,n=Ncities,p=50)

#Example2 - Clustering Problem: k-medois
Distance<-as.matrix(dist(iris[,1:4]))
N<-nrow(iris)
k<-3 #Clusters

#Example3 - Knapsack Problem
wi<-c(40,50,30,10,10,40,30)
li<-c(40,80,10,10,4,20,60)
C<-100
Datalw<-cbind(li,wi)
s<-brkga(Data=Datalw,Fo=Fobj_KNAPSACK,Dc=Decoder_KNAPSACK,n=length(wi),p=10,ng=100,Exa2=C,MAX=TRUE)

wi<-c(8,10,39,94,32,88,64,90,20,63,71,7,17,99,77,57,3,26,43,55,95,53,34,62,74)
li<-c(23,18,40,87,34,27,44,46,47,65,90,26,6,22,31,12,10,54,71,36,30,63,59,45,79)
C<-400
Datalw<-cbind(li,wi)

#Example4 - MDP Problem - Maximum Diversity Problem
data(DataMDP1)
D<-Data_MDP1
N<-dim(D)[1]
M<-10
RDi<-apply(as.matrix(1:N),1,function(i) sum(D[i,]))/sum((D[upper.tri(D)]))
Exa1<-list(M=M,RDi=RDi)

#Example5 - Optimal Allocation  in Stratified Sampling
Nh<-c(212,84,61)
Sh2<-c(723.1,2693.4,36231.7)
Y<-80548
H<-3
Exa2<-list(Nh=Nh,Y=Y,cvt=0.05)
s<-brkga(Data=Sh2,Fo=Fobj_ALLOC_SAMPLE,Dc=Decoder_ALLOC_SAMPLE,n=H,p=1000,
MaxTime=3,Exa1=Nh,Exa2=Exa2,MAX=FALSE)

#Example6 - Minimization of Himmelblaus Function
nv<-2 #Number of variables
s<-brkga(Data=NULL,Fo=Fobj_HIMMELBLAUS,Dc=Decoder_HIMMELBLAUS,n=nv,p=100)

#Example7 - MSDCP - Minimum Sum Distance Clustering Problem
k<-3 #Clusters
Distance<-as.matrix(dist(iris[,1:4]))
N<-nrow(iris)
}
\references{
1. Gonçalves, J.F. and Resende, M.G.C. (2011).
Biased random-key genetic algorithms for combinatorial optimization,
Journal of Heuristics, 17, p 487-525.

2. Gonçalves, J.F and Resende M.G.C. (2018). Biased random-key genetic programming.
Handbook of Heuristics, Edited by: Martí, R., Pardalos, P.M. Pardalos and Resende M.G.C.
, pp. 23-37, Springer.
}
\author{
Jose Brito (jambrito@gmail.com), Gustavo Semaan (gustavosemaan@gmail.com) and Augusto Fadel (augustofadel@gmail.com).
}
